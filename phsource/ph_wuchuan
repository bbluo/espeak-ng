//====================================================
//  吴川话音素定义文件
//  基于ph_yue结构，继承base1
//  根据wuchuan_rules中的声韵系统定义
//====================================================

//====================================================
//  声调系统 (10个声调)
//====================================================

phoneme 1   //  阴平 55 (高平调)
  stress
  Tone(55, 55, envelope/p_level, NULL)
endphoneme

phoneme 2   //  阳平 44 (中平调)
  stress
  Tone(44, 44, envelope/p_level, NULL)
endphoneme

phoneme 3   //  阴上 24 (低升调)
  stress
  Tone(24, 24, envelope/p_level, NULL)
endphoneme

phoneme 4   //  阳上 33 (中平调)
  stress
  Tone(33, 33, envelope/p_level, NULL)
endphoneme

phoneme 5   //  阴去 11 (低平调)
  stress
  Tone(11, 11, envelope/p_level, NULL)
endphoneme

phoneme 6   //  阳去 22 (低平调)
  stress
  Tone(22, 22, envelope/p_level, NULL)
endphoneme

phoneme 7   //  上阴入 4 (高短调)
  stress
  Tone(4, 4, envelope/p_level, NULL)
endphoneme

phoneme 8   //  下阴入 1 (低短调)
  stress
  Tone(1, 1, envelope/p_level, NULL)
endphoneme

phoneme 9   //  上阳入 3 (中短调)
  stress
  Tone(3, 3, envelope/p_level, NULL)
endphoneme

phoneme 10  //  下阳入 2 (低短调)
  stress
  Tone(2, 2, envelope/p_level, NULL)
endphoneme

//====================================================
//  吴川话特有韵母
//====================================================

phoneme AI   // âi [Ai]
  vwl starttype #a endtype #i
  length 220
  FMT(vdiph/aI)
endphoneme

phoneme AU   // âu [Au]
  vwl starttype #a endtype #u
  length 220
  FMT(vdiph/aU)
endphoneme

phoneme Am   // âm [Am]
  vwl starttype #a endtype #a
  length 220
  FMT(vowel/a)
endphoneme

phoneme AN   // âng [Aŋ]
  vwl starttype #a endtype #a
  length 220
  FMT(vwl_zh/ang)
endphoneme

phoneme Ap   // âb [Ap]
  vwl starttype #a endtype #a
  length 150
  FMT(vowel/a)
endphoneme

phoneme Ak   // âg [Ak]
  vwl starttype #a endtype #a
  length 150
  FMT(vowel/a)
endphoneme

phoneme E    // ê [ε]
  vwl starttype #e endtype #e
  length 200
  FMT(vowel/ee_1)
endphoneme

phoneme O    // o [ɔ]
  vwl starttype #o endtype #o
  length 200
  FMT(vowel/oo)
endphoneme

phoneme waI  // oai [uai]
  vwl starttype #u endtype #i
  length 250
  FMT(vdiph/aI)
endphoneme

phoneme waU  // oau [uau]
  vwl starttype #u endtype #u
  length 250
  FMT(vdiph/aU)
endphoneme

phoneme wam  // oam [uam]
  vwl starttype #u endtype #a
  length 220
  FMT(vowel/u)
endphoneme

phoneme waN  // oang [uaŋ]
  vwl starttype #u endtype #a
  length 220
  FMT(vwl_zh/ang)
endphoneme

phoneme wap  // oab [uap]
  vwl starttype #u endtype #a
  length 150
  FMT(vowel/u)
endphoneme

phoneme wak  // oag [uak]
  vwl starttype #u endtype #a
  length 150
  FMT(vowel/u)
endphoneme

phoneme iam  // iam [iam]
  vwl starttype #i endtype #a
  length 220
  FMT(vowel/i)
endphoneme

phoneme iaN  // iang [iaŋ]
  vwl starttype #i endtype #a
  length 220
  FMT(vwl_zh/ang)
endphoneme

phoneme iap  // iab [iap]
  vwl starttype #i endtype #a
  length 150
  FMT(vowel/i)
endphoneme

phoneme iak  // iag [iak]
  vwl starttype #i endtype #a
  length 150
  FMT(vowel/i)
endphoneme

phoneme iaU  // iau [iau]
  vwl starttype #i endtype #u
  length 220
  FMT(vdiph2/iu)
endphoneme

//====================================================
//  吴川话特有辅音
//====================================================

phoneme J    // nj [n.]
  vcd alv nas
  lengthmod 4
  Vowelin f1=0 f2=1500 -200 200 f3=0 80
  Vowelout f1=2 f2=1500 -300 250 f3=-100 80 rms=20 brk
  WAV(n/n_new)
endphoneme

phoneme S    // x [c]
  vls pla frc sib
  lengthmod 3
  Vowelin f1=0 f2=2300 200 400 f3=-100 80
  Vowelout f1=0 f2=2300 250 300 f3=-100 80 rms=20
  WAV(ufric/sh)
endphoneme

phoneme r    // rd [1]
  vcd alv apr
  lengthmod 6
  Vowelin f1=0 f2=1700 -300 300 f3=-100 80
  Vowelout f1=2 f2=1700 -300 250 f3=-100 80 rms=20
  FMT(r3/r_trill2)
endphoneme

phoneme kw   // gu [kw]
  vls vel stp
  lengthmod 2
  Vowelin f1=0 f2=2300 200 300 f3=-200 80
  Vowelout f1=1 f2=2300 300 400 f3=-200 80 rms=20
  WAV(ustop/k)
endphoneme

phoneme kwh  // ku [k’w]
  vls vel stp
  lengthmod 2
  Vowelin f1=0 f2=2300 200 300 f3=-200 80
  Vowelout f1=1 f2=2300 300 400 f3=-200 80 rms=20
  WAV(ustop/k)
endphoneme

phoneme ?    // hg [?]
  vls glt stp
  lengthmod 1
  WAV(ustop/q)
endphoneme

//====================================================
//  wuchuan_rules中使用的音素
//====================================================

phoneme â    // â元音
  vwl starttype #a endtype #a
  length 200
  FMT(vowel/a)
endphoneme

phoneme y // **y**es
  liquid pal starttype #i
  lengthmod 7

  IF nextPhW(isVowel) THEN
    NextVowelStarts
      VowelStart(j/j@)
      VowelStart(j/ja)
      VowelStart(j/je)
      VowelStart(j/ji)
      VowelStart(j/jo)
      VowelStart(j/ju)
    EndSwitch

    VowelEnding(j/xj, -30)

    IF prevPh(isPause) THEN
      FMT(j/_j)
    ENDIF
  ELSE
    // no vowel follows
    Vowelout len=70
    FMT(j/j_)
  ENDIF
endphoneme

phoneme I    // 大写I双元音
  vwl starttype #a endtype #i
  length 220
  FMT(vdiph/aI)
endphoneme

phoneme U    // 大写U双元音
  vwl starttype #a endtype #u
  length 220
  FMT(vdiph/aU)
endphoneme

phoneme ê    // ê元音
  vwl starttype #e endtype #e
  length 200
  FMT(vowel/ee_1)
endphoneme

//====================================================
//  特殊辅音定义
//====================================================

phoneme dh   // 吴川话dh声母，等同于d
  vcd alv stp
  lengthmod 5
  Vowelin f1=1  f2=1700 -300 300  f3=-100 80
  Vowelout f1=2 f2=1700 -300 300  f3=-100 80 brk

  IF PreVoicing THEN
    FMT(d/xd)
  ENDIF

  IF nextPh(isPause2) THEN
    FMT(d/d_)  addWav(x/d_)
  ENDIF

  FMT(d/d) addWav(x/d)
endphoneme

//====================================================
//  特殊d音素处理 - 前面有韵母时不发声
//====================================================

phoneme d
  vcd alv stp
  voicingswitch t
  lengthmod 5
  Vowelin f1=1  f2=1700 -300 300  f3=-100 80
  Vowelout f1=2 f2=1700 -300 300  f3=-100 80 brk

  // 检查前一个音素是否为韵母，如果是则静音处理
  IF prevPh(isVowel) THEN
    // 前面有韵母时不发声
    length 0
    // 使用静音处理
  ELSE
    // 正常的d音素发声
    IF PreVoicing THEN
      FMT(d/xd)
    ENDIF

    IF nextPh(isPause2) THEN
      FMT(d/d_)  addWav(x/d_)
    ENDIF

    FMT(d/d) addWav(x/d)
  ENDIF
endphoneme

//====================================================
//  特殊g音素处理 - 前面有韵母时不发声
//====================================================

phoneme g
  vcd vel stp
  lengthmod 5
  Vowelin f1=2  f2=2300 200 300  f3=-300 80
  Vowelout f1=2  f2=2300 250 300  f3=-300 80 brk

  // 检查前一个音素是否为韵母，如果是则静音处理
  IF prevPh(isVowel) THEN
    // 前面有韵母时完全静音，使用NULL波形
    WAV(NULL)
  ELSE
    // 正常的g音素发声
    IF PreVoicing THEN
      FMT(g/xg)
    ENDIF

    IF nextPh(isPause2) THEN
      FMT(g/g_) addWav(x/g_)
    ENDIF
    FMT(g/g) addWav(x/g2, 150)
  ENDIF
endphoneme

phoneme p
  vls blb stp
  lengthmod 2
  Vowelin  f1=0  f2=1000 -50 -100  f3=-200 80 amp=11
  Vowelout f1=0  f2=1000 -500 -350  f3=-300 80 rms=22

  IF nextPh(isPause2) THEN
    WAV(ustop/p_)
  ELIF nextPh(r) THEN
    WAV(ustop/pr, 70)
  ELIF nextPh(R) OR nextPh(R2) THEN
    WAV(ustop/pr)
  ELIF nextPh(@-) THEN
    WAV(ustop/p_unasp)
  ELIF nextPh(l) THEN
    WAV(ustop/pl)
  ENDIF
  WAV(ustop/p)
endphoneme

//====================================================
//  N音素 - ng鼻音韵尾
//====================================================

phoneme ng   // synonym for [N]
  vwl
  length 350
  IF nextPh(isVowel) THEN
    ChangePhoneme(N)
  ENDIF
  ChangePhoneme(N)
endphoneme

//====================================================
//  k音素处理 - 前面有韵母时不发声
//====================================================

phoneme k
  vls vel stp
  lengthmod 2
  Vowelin f1=0  f2=2300 200 300  f3=-200 80
  Vowelout f1=1  f2=2300 300 400  f3=-200 80 rms=20

  // 检查前一个音素是否为韵母，如果是则静音处理
  IF prevPh(isVowel) THEN
    // 前面有韵母时完全静音，使用NULL波形
    WAV(NULL)
  ELSE
    // 正常的k音素发声
    IF nextPh(isPause2) THEN
      WAV(ustop/k_)
    ENDIF
    WAV(ustop/k)
  ENDIF
endphoneme

//====================================================
//  x音素 - 与普通话处理一致
//====================================================

phoneme x
  vls vel frc
  lengthmod 3
  Vowelin f1=0  f2=2300 200 400  f3=-100 80
  Vowelout f1=0 f2=2300 300 400  f3=-100 80  rms=20

  IF nextPh(isPause) THEN
    WAV(ufric/x_, 60)
  ENDIF
  WAV(ufric/x_hr, 20)
endphoneme